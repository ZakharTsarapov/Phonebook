{"version":3,"file":"static/js/822.b746e876.chunk.js","mappings":"iQAMe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACvC,OAAQD,GACN,IAAK,QACH,OAAOV,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,OAEL,EAaD,OACE,iBAAKC,UAAWC,EAAAA,QAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,QAAAA,UAAf,sBAEA,kBAAMD,UAAWC,EAAAA,QAAAA,MAAWC,SAVX,SAAAC,GACnBA,EAAIC,iBACJb,EAASc,EAAAA,GAAAA,MAAqB,CAAElB,MAAAA,EAAOE,SAAAA,KANvCD,EAAS,IACTE,EAAY,GAOb,EAMuDgB,aAAa,MAAjE,WACE,mBAAON,UAAWC,EAAAA,QAAAA,MAAWM,QAASd,EAAtC,mBAEE,kBACEO,UAAWC,EAAAA,QAAAA,MACXO,KAAK,QACLV,KAAK,QACLC,MAAOZ,EACPsB,SAAUb,EACVc,GAAIjB,EACJkB,UAAQ,QAIZ,mBAAOX,UAAWC,EAAAA,QAAAA,MAAWM,QAASZ,EAAtC,sBAEE,kBACEK,UAAWC,EAAAA,QAAAA,MACXO,KAAK,WACLV,KAAK,WACLC,MAAOV,EACPoB,SAAUb,EACVc,GAAIf,EACJgB,UAAQ,QAIZ,mBAAQX,UAAWC,EAAAA,QAAAA,IAASO,KAAK,SAAjC,wBAMP,C,8BCzED,WAAgB,UAAY,yBAAyB,UAAY,yBAAyB,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,IAAM,mB","sources":["Pages/Login/Login.jsx","webpack://react-homework-template/./src/Pages/Login/Login.module.css?c471"],"sourcesContent":["import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport css from './Login.module.css';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const onInputChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    formReset();\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.grettings}>Sing in</h1>\n\n      <form className={css.login} onSubmit={onFormSubmit} autoComplete=\"off\">\n        <label className={css.label} htmlFor={emailInputId}>\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={onInputChange}\n            id={emailInputId}\n            required\n          />\n        </label>\n\n        <label className={css.label} htmlFor={passwordInputId}>\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onInputChange}\n            id={passwordInputId}\n            required\n          />\n        </label>\n\n        <button className={css.btn} type=\"submit\">\n          Enter\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__AfVl6\",\"grettings\":\"Login_grettings__t5cYt\",\"login\":\"Login_login__TcnNa\",\"label\":\"Login_label__aj9QJ\",\"input\":\"Login_input__J2rrS\",\"btn\":\"Login_btn__7ncvr\"};"],"names":["Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","emailInputId","nanoid","passwordInputId","onInputChange","target","name","value","className","css","onSubmit","evt","preventDefault","authOperations","autoComplete","htmlFor","type","onChange","id","required"],"sourceRoot":""}